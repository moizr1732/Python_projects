# -*- coding: utf-8 -*-
"""international football

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dxAnc2E2wfxbFuG49REPtAxhDrcldTbX

This project involves the analysis and management of data related to international football, utilizing three distinct datasets. These datasets contain key information, including player names, match details, match dates, as well as the names of home and away teams.

The goal of this project is to explore and uncover meaningful insights, patterns, and trends within the realm of international football. By leveraging Python's extensive ecosystem of libraries and tools, such as Pandas, NumPy, Matplotlib, and Seaborn, the project aims to streamline data processing, cleaning, visualization, and analysis. Pythonâ€™s versatility and its unique, powerful options make it an ideal choice for tackling such complex data tasks efficiently.

Through this project, key questions about player performance, team comparisons, and match outcomes can be addressed. Additionally, advanced techniques such as statistical modeling or machine learning algorithms can be integrated to predict future outcomes or identify hidden correlations within the data.

The project not only showcases the power of Python for data-driven decision-making but also highlights the importance of data analytics in understanding and enhancing the beautiful game of football on a global scale.
"""

from google.colab import files

# Upload the Excel file
uploaded = files.upload()

from google.colab import files

# Upload the Excel file
uploaded = files.upload()

from google.colab import files

# Upload the Excel file
uploaded = files.upload()

!pip install pandas openpyxl

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# Load the CSV file
goal = pd.read_csv('goalscorers.csv')
goal.head()

""" **ANALYZING GOALSCORERS DATASETS**"""

goal.shape

goal.tail()

goal.describe()

goal.dropna(inplace=True)
goal.fillna(0, inplace=True)

goal.duplicated().sum()

goal.drop_duplicates(inplace=True)
goal.drop_duplicates()

from matplotlib import pyplot as plt
import seaborn as sns
goal.groupby('own_goal').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

goal['team'] = goal['team'].str.lower()
goal['team']

goal['match_date'] = pd.to_datetime(goal['date'], format='%Y-%m-%d')
goal['match_date']

goal['minute'] = goal['minute'].astype(int)
goal['minute'].dtype

goal = goal[goal['own_goal'] >= 0]
goal



goal['minute'].plot(kind='hist', bins=20, title='minute')
plt.gca().spines[['top', 'right',]].set_visible(False)

goal['scorer'] = goal['scorer'].str.strip().str.title()
goal['scorer']

goal['teams'] = goal['home_team'].astype(str) + ' - ' + goal['away_team'].astype(str)
goal['teams']

goal.isnull().sum()

goal.dtypes

"""**ANALYZING RESULT DATASET**"""

result = pd.read_csv('results.csv')
result.head()

result.tail(
)

result.describe()

result.isnull().sum()

result.dropna(inplace=True)
result.fillna(0, inplace=True)

result['date'] = pd.to_datetime(result['date'], format='%Y-%m-%d')
result['date']

result.head()

from ast import And
result['away_team'] = result['away_team'].str.lower()
result['away_team']
And
result['home_team'] = result['home_team'].str.lower()
result['home_team']

result['tournament'] = result['tournament'].str.strip().str.title()
result['tournament']

from matplotlib import pyplot as plt
result.plot(kind='scatter', x='home_score', y='away_score', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

tour = result.dropna(subset=['tournament'], inplace=True)
score = result.dropna(subset=['home_score'], inplace=True)

import numpy as np
result['match_result'] = np.where(result['home_score'] > result['away_score'], 'Win', 'Lose')
result['match_result']

from matplotlib import pyplot as plt
import seaborn as sns
result.groupby('match_result').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

shootout = pd.read_csv('shootouts.csv')
shootout.head()

shootout.isnull().sum()

shootout.describe()

shootout.dropna(inplace=True)
shootout.fillna(0, inplace=True)

shootout.dtypes

shootout.head()

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  counted = (series['date']
                .value_counts()
              .reset_index(name='counts')
              .rename({'index': 'date'}, axis=1)
              .sort_values('date', ascending=True))
  xs = counted['date']
  ys = counted['counts']
  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = shootout.sort_values('date', ascending=True)
_plot_series(df_sorted, '')
sns.despine(fig=fig, ax=ax)
plt.xlabel('date')
_ = plt.ylabel('count()')

shootout.tail()