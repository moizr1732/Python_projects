# -*- coding: utf-8 -*-
"""Marketing team data cleaning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GGK2fSu0vFPBQXeaM136ixa2zpQz2Ye6
"""

from google.colab import files

# Upload the Excel file
uploaded = files.upload()

!pip install pandas openpyxl

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# Load the CSV file
MTD = pd.read_csv('Marketing Team Data - Sheet1.csv')
MTD.head()

MTD.shape

MTD.describe()

MTD = MTD.rename(columns={
    'campaign ID': 'campaign_id',
    'Campaign Name': 'campaign_name',
    'Audience': 'audience',
    'Age': 'age',
    'Geography': 'geography',
    'Reach': 'reach',
    'Impressions': 'impressions',
    'Frequency': 'frequency',
    'Clicks': 'clicks',
    'Unique Clicks': 'unique_clicks',
    'Unique Link Clicks (ULC)': 'unique_link_clicks',
    'Click-Through Rate (CTR in %)': 'ctr',
    'Unique Click-Through Rate (Unique CTR in %)': 'unique_ctr',
    'Amount Spent in INR': 'amount_spent_inr',
    'Cost Per Click (CPC)': 'cpc',
    'Cost per Result (CPR)': 'cpr'
})
MTD.head()

def clean_currency(value):
    if isinstance(value, str):
        return float(value.replace('$', '').replace(',', ''))
    return value

# Function to remove % and convert to float
def clean_percentage(value):
    if isinstance(value, str):
        return float(value.replace('%', ''))
    return value

# Apply cleaning functions to relevant columns
MTD['amount_spent_inr'] = MTD['amount_spent_inr'].apply(clean_currency)
MTD['cpc'] = MTD['cpc'].apply(clean_currency)
MTD['cpr'] = MTD['cpr'].apply(clean_currency)

MTD['ctr'] = MTD['ctr'].apply(clean_percentage)
MTD['unique_ctr'] = MTD['unique_ctr'].apply(clean_percentage)

# Display the cleaned DataFrame
print(MTD)

MTD = MTD.drop(columns=['@dropdown.1'])
MTD.head()



MTD.dtypes

def detect_outliers(column):
    Q1 = column.quantile(0.25)  # First quartile (25th percentile)
    Q3 = column.quantile(0.75)  # Third quartile (75th percentile)
    IQR = Q3 - Q1  # Interquartile range
    lower_bound = Q1 - 1.5 * IQR  # Lower bound for outliers
    upper_bound = Q3 + 1.5 * IQR  # Upper bound for outliers
    return (column < lower_bound) | (column > upper_bound)  # Boolean mask for outliers

# Detect outliers in numeric columns
numeric_columns = ['cpc', 'cpr', 'ctr', 'amount_spent_inr']
for col in numeric_columns:
    MTD[f'{col}_outlier'] = detect_outliers(MTD[col])

print("DataFrame with Outlier Flags:")
print(MTD)

MTD

plt.figure(figsize=(12, 6))
for i, col in enumerate(numeric_columns, 1):
    plt.subplot(2, 2, i)
    sns.boxplot(x=MTD[col])
    plt.title(f'Boxplot of {col}')
plt.tight_layout()
plt.show()

from google.colab import files
files.download('Marketing Team Data - Sheet1.csv')

MTD.to_excel('MTD.xlsx', index=False)

# Download to local machine
from google.colab import files
files.download('MTD.xlsx')

MTD

MTD = MTD.drop(columns=['cpc_outlier',	'cpr_outlier',	'ctr_outlier',	'amount_spent_inr_outlier'])
MTD